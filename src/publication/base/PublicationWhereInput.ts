/*
//------------------------------------------------------------------------------ 
// This code was generated by Amplication. 
// 
// Changes to this file will be lost if the code is regenerated. 
//
// There are other ways to to customize your code, see this doc to learn more
// https://docs.amplication.com/docs/how-to/custom-code
//
//------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EventWhereUniqueInput } from "../../event/base/EventWhereUniqueInput";
import { PostWhereUniqueInput } from "../../post/base/PostWhereUniqueInput";
import { OfferWhereUniqueInput } from "../../offer/base/OfferWhereUniqueInput";
import { StoryWhereUniqueInput } from "../../story/base/StoryWhereUniqueInput";
import { VideoWhereUniqueInput } from "../../video/base/VideoWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
@InputType()
class PublicationWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  // @ApiProperty({
  //   required: false,
  //   type: StringNullableFilter,
  // })
  // @Type(() => StringNullableFilter)
  // @IsOptional()
  // @Field(() => StringNullableFilter, {
  //   nullable: true,
  // })
  // type?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  title?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EventWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EventWhereUniqueInput)
  @IsOptional()
  @Field(() => EventWhereUniqueInput, {
    nullable: true,
  })
  event?: EventWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PostWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PostWhereUniqueInput)
  @IsOptional()
  @Field(() => PostWhereUniqueInput, {
    nullable: true,
  })
  post?: PostWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OfferWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OfferWhereUniqueInput)
  @IsOptional()
  @Field(() => OfferWhereUniqueInput, {
    nullable: true,
  })
  offer?: OfferWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => StoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StoryWhereUniqueInput)
  @IsOptional()
  @Field(() => StoryWhereUniqueInput, {
    nullable: true,
  })
  story?: StoryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => VideoWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VideoWhereUniqueInput)
  @IsOptional()
  @Field(() => VideoWhereUniqueInput, {
    nullable: true,
  })
  video?: VideoWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;
}
export { PublicationWhereInput };
