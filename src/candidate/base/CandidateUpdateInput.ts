/*
//------------------------------------------------------------------------------ 
// This code was generated by Amplication. 
// 
// Changes to this file will be lost if the code is regenerated. 
//
// There are other ways to to customize your code, see this doc to learn more
// https://docs.amplication.com/docs/how-to/custom-code
//
//------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsInt,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { JobWhereUniqueInput } from "../../job/base/JobWhereUniqueInput";
import { UserWhereInputIdRequired } from "../../user/base/UserWhereInputIdRequired";
import { CourseUpdateInput } from "src/course/base/CourseUpdateInput";
import { ExperienceUpdateInput } from "src/experience/base/ExperienceUpdateInput";
import { UserCreateInput } from "src/user/base/UserCreateInput";
import { UserUpdateInput } from "src/user/base/UserUpdateInput";
import { ExperienceCreateInput } from "src/experience/base/ExperienceCreateInput";
import { CourseCreateInput } from "src/course/base/CourseCreateInput";
@InputType()
class CandidateUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  activityField?: string | null;

  @ApiProperty({
    required: false,
    type: () => JobWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => JobWhereUniqueInput)
  @IsOptional()
  @Field(() => JobWhereUniqueInput, {
    nullable: true,
  })
  job?: JobWhereUniqueInput | null;


  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  wantedPost?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  experiencesYears?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  languages?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tags?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  maxSalary?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  minSalary?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  personalCv?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  mediaLink?: string | null;
  
  @ApiProperty({
    required: false,
    type: () => UserUpdateInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateInput)
  @IsOptional()
  @Field(() => UserUpdateInput, {
    nullable: true,
  })
  user?: UserUpdateInput;

  

  @ApiProperty({
    required: false,
    type: () => [CourseCreateInput],
  })
  @IsOptional()
  courses? : Array<CourseCreateInput>;

  @ApiProperty({
    required: false,
    type: () => [ExperienceCreateInput]
  })
  @IsOptional()
  experiences? : Array<ExperienceCreateInput>;
  


}
export { CandidateUpdateInput };
