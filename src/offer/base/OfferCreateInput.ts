/*
//------------------------------------------------------------------------------ 
// This code was generated by Amplication. 
// 
// Changes to this file will be lost if the code is regenerated. 
//
// There are other ways to to customize your code, see this doc to learn more
// https://docs.amplication.com/docs/how-to/custom-code
//
//------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsInt,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { PublicationWhereUniqueInput } from "../../publication/base/PublicationWhereUniqueInput";
import { ContractWhereUniqueInput } from "../../contract/base/ContractWhereUniqueInput";
import { CommunityWhereUniqueInput } from "src/community/base/CommunityWhereUniqueInput";
import { QuestionCreateInput } from "src/question/base/QuestionCreateInput";
@InputType()
class OfferCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  place?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  renumeration?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  offerType?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  experienceLevel?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  maxExperience?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsInt()
  @Type(() => Number)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  candidateMaxNumber?: number | null;

  @ApiProperty({
    required: true,
    type: () => PublicationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PublicationWhereUniqueInput)
  @Field(() => PublicationWhereUniqueInput)
  publication!: PublicationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ContractWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ContractWhereUniqueInput)
  @IsOptional()
  @Field(() => ContractWhereUniqueInput, {
    nullable: true,
  })
  contract?: ContractWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsOptional()
  @IsBoolean()
  @Field(() => Boolean)
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => [String],
  })
  @Type(() => Array)
  @IsOptional()
  @Field(() => [String], {
    nullable: true,
  })
  offersOnCommunities?: Array<string>;
  
  @ApiProperty({
    required: false,
    type: () => [QuestionCreateInput],
  })
  @Type(() => Array)
  @IsOptional()
  @Field(() => [QuestionCreateInput], {
    nullable: true,
  })
  questions?: Array<QuestionCreateInput>

  @ApiProperty({
    required: false,
  })
  @IsString()
  @IsOptional()
  @Type(() => String)
  @Field(() => String)
  offerMode?: string | null;
}
export { OfferCreateInput };