/*
//------------------------------------------------------------------------------ 
// This code was generated by Amplication. 
// 
// Changes to this file will be lost if the code is regenerated. 
//
// There are other ways to to customize your code, see this doc to learn more
// https://docs.amplication.com/docs/how-to/custom-code
//
//------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  IsOptional,
  IsInt,
  ValidateNested,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { Question } from "../../question/base/Question";
import { Feedback } from "../../feedback/base/Feedback";
import { OffersOnCommunity } from "../../offersOnCommunity/base/OffersOnCommunity";
import { Publication } from "../../publication/base/Publication";
import { Contract } from "../../contract/base/Contract";
@ObjectType()
class Offer {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  @IsOptional()
updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  place!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  renumeration!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  offerType!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  experienceLevel!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  maxExperience!: number | null;

  @ApiProperty({
    required: false,
  })
  @IsInt()
  @Type(() => Number)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  candidateMaxNumber!: number | null;

  @ApiProperty({
    required: false,
    type: () => [Question],
  })
  @ValidateNested()
  @Type(() => Question)
  @IsOptional()
  questions?: Array<Question>;

  @ApiProperty({
    required: false,
    type: () => [Feedback],
  })
  @ValidateNested()
  @Type(() => Feedback)
  @IsOptional()
  feedbacks?: Array<Feedback>;

  @ApiProperty({
    required: false,
    type: () => [OffersOnCommunity],
  })
  @ValidateNested()
  @Type(() => OffersOnCommunity)
  @IsOptional()
  offersOnCommunities?: Array<OffersOnCommunity>;

  @ApiProperty({
    required: true,
    type: () => Publication,
  })
  @ValidateNested()
  @Type(() => Publication)
  publication?: Publication;

  @ApiProperty({
    required: false,
    type: () => Contract,
  })
  @ValidateNested()
  @Type(() => Contract)
  @IsOptional()
  contract?: Contract | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsOptional()
  @IsBoolean()
  @Field(() => Boolean)
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @IsOptional()
  @Type(() => Date)
  @Field(() => Date)
  deletedAt?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsString()
  @IsOptional()
  @Type(() => String)
  @Field(() => String)
  offerMode?: string | null;
}
export { Offer };
