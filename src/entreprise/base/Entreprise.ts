/*
//------------------------------------------------------------------------------ 
// This code was generated by Amplication. 
// 
// Changes to this file will be lost if the code is regenerated. 
//
// There are other ways to to customize your code, see this doc to learn more
// https://docs.amplication.com/docs/how-to/custom-code
//
//------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  IsOptional,
  IsInt,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { Recruiter } from "../../recruiter/base/Recruiter";
import { Chatroom } from "../../chatroom/base/Chatroom";
import { Chat } from "../../chat/base/Chat";
import { FollowEntreprise } from "../../followEntreprise/base/FollowEntreprise";
import { Survey } from "../../survey/base/Survey";
import { Post } from "../../post/base/Post";
import { Video } from "../../video/base/Video";
import { UsersOnEntreprise } from "../../usersOnEntreprise/base/UsersOnEntreprise";
import { EntreprisesOnCommunity } from "../../entreprisesOnCommunity/base/EntreprisesOnCommunity";
@ObjectType()
class Entreprise {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  @IsOptional()
updatedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  owner!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  presentationContent!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  presentationVideolink!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  websiteLink!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  linkedinLink!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  instagramLink!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  departement!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  workersNumber!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  image!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  coverImage!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Recruiter],
  })
  @ValidateNested()
  @Type(() => Recruiter)
  @IsOptional()
  recruiters?: Array<Recruiter>;

  @ApiProperty({
    required: false,
    type: () => [Chatroom],
  })
  @ValidateNested()
  @Type(() => Chatroom)
  @IsOptional()
  chatrooms?: Array<Chatroom>;

  @ApiProperty({
    required: false,
    type: () => [Chat],
  })
  @ValidateNested()
  @Type(() => Chat)
  @IsOptional()
  chats?: Array<Chat>;

  @ApiProperty({
    required: false,
    type: () => [FollowEntreprise],
  })
  @ValidateNested()
  @Type(() => FollowEntreprise)
  @IsOptional()
  followEntreprises?: Array<FollowEntreprise>;

  @ApiProperty({
    required: false,
    type: () => [Survey],
  })
  @ValidateNested()
  @Type(() => Survey)
  @IsOptional()
  surveys?: Array<Survey>;

  @ApiProperty({
    required: false,
    type: () => [Post],
  })
  @ValidateNested()
  @Type(() => Post)
  @IsOptional()
  posts?: Array<Post>;

  @ApiProperty({
    required: false,
    type: () => [Video],
  })
  @ValidateNested()
  @Type(() => Video)
  @IsOptional()
  videos?: Array<Video>;

  @ApiProperty({
    required: false,
    type: () => [UsersOnEntreprise],
  })
  @ValidateNested()
  @Type(() => UsersOnEntreprise)
  @IsOptional()
  usersOnEntreprises?: Array<UsersOnEntreprise>;

  @ApiProperty({
    required: false,
    type: () => [EntreprisesOnCommunity],
  })
  @ValidateNested()
  @Type(() => EntreprisesOnCommunity)
  @IsOptional()
  entreprisesOnCommunities?: Array<EntreprisesOnCommunity>;
}
export { Entreprise };
