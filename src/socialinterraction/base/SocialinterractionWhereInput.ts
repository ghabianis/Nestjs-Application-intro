/*
//------------------------------------------------------------------------------ 
// This code was generated by Amplication. 
// 
// Changes to this file will be lost if the code is regenerated. 
//
// There are other ways to to customize your code, see this doc to learn more
// https://docs.amplication.com/docs/how-to/custom-code
//
//------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type, Transform} from "class-transformer";
import {  IsDate, IsOptional, IsString, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { PublicationWhereUniqueInput } from "../../publication/base/PublicationWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
@InputType()
class SocialinterractionWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  type?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PublicationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PublicationWhereUniqueInput)
  @IsOptional()
  @Field(() => PublicationWhereUniqueInput, {
    nullable: true,
  })
  publication?: PublicationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => Boolean,
  })
  @IsOptional()
  @Transform(({ value} ) => 
    {
      if (value === 'false') return false;
      if (value === 'true') return true;
      return value
      
    }
  )
  @Field(() => Boolean, {
    nullable: true,
  })
  isactive?: boolean;

  @ApiProperty({
    required: false,
    type: () => String,
  })
  @IsOptional()
  @IsString()
  @Field(() => String, {
    nullable: true,
  })
  label?: string;
  
  @ApiProperty({
    required: false,
    type: () => String,
  })
  @IsOptional()
  @IsString()
  @Field(() => String, {
    nullable: true,
  })
  entrepriseId?:string;
  
  @ApiProperty({
    required: false,
    type: () => StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @IsDate()
  @Field(() => StringFilter, {
    nullable: true,
  })
  createdAt?:StringFilter;

  @ApiProperty({
    required: false,
    type: () => String,
  })
  @IsOptional()
  @IsString()
  @Field(() => String, {
    nullable: true,
  })
  offerId?:string;
}
export { SocialinterractionWhereInput };
